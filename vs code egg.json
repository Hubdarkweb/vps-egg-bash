{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PTERODACTYL PANEL - PTERODACTYL.IO",
    "meta": {
        "version": "PTDL_v2",
        "update_url": null
    },
    "exported_at": "2023-12-19T00:00:00+00:00",
    "name": "Code-Server",
    "author": "mario.franze@gmail.com",
    "description": "Run VS Code on any machine anywhere and access it in the browser.",
    "features": null,
    "docker_images": {
        "ghcr.io/parkervcp/yolks:nodejs_18": "ghcr.io/parkervcp/yolks:nodejs_18",
        "ghcr.io/parkervcp/yolks:nodejs_17": "ghcr.io/parkervcp/yolks:nodejs_17",
        "ghcr.io/parkervcp/yolks:nodejs_16": "ghcr.io/parkervcp/yolks:nodejs_16",
        "ghcr.io/parkervcp/yolks:nodejs_14": "ghcr.io/parkervcp/yolks:nodejs_14",
        "ghcr.io/parkervcp/yolks:nodejs_12": "ghcr.io/parkervcp/yolks:nodejs_12"
    },
    "file_denylist": [],
    "startup": "sh .local/lib/code-server-{{VERSION}}/bin/code-server",
    "config": {
        "files": "{\r\n    \".config/code-server/config.yaml\": {\r\n        \"parser\": \"file\",\r\n        \"find\": {\r\n            \"password\": \"password: {{server.build.env.PASSWORD}}\",\r\n            \"bind-addr\": \"bind-addr: 0.0.0.0:{{server.build.default.port}}\"\r\n        }\r\n    }\r\n}",
        "startup": "{\r\n    \"done\": \"HTTP server listening on\"\r\n}",
        "logs": "{}",
        "stop": "^^C"
    },
    "scripts": {
        "installation": {
            "script": "apt update\r\napt install -y curl jq\r\n\r\nARCH=$([[ \"$(uname -m)\" == \"x86_64\" ]] && echo \"amd64\" || echo \"arm64\")\r\nMATCH=linux-${ARCH}\r\n# Create initial directories\r\nmkdir -p /mnt/server\r\ncd /mnt/server\r\necho ${ARCH}\r\necho ${MATCH}\r\n# Create needed directories\r\nmkdir -p /mnt/server/.local/lib /mnt/server/.local/bin /mnt/server/.config/code-server /mnt/server/projects\r\nchmod 777 /mnt/server/projects\r\ntouch \"/mnt/server/projects/PLACE YOUR PROJECTS HERE\"\r\n\r\n# Check for available versions. Defaults to latest if no valid version is found.\r\nLATEST_JSON=$(curl --silent \"https://api.github.com/repos/coder/code-server/releases/latest\")\r\nRELEASES=$(curl --silent \"https://api.github.com/repos/coder/code-server/releases\")\r\n\r\nif [ -z \"${VERSION}\" ] || [ \"${VERSION}\" == \"latest\" ]; then\r\n    DOWNLOAD_URL=$(echo ${LATEST_JSON} | jq .assets | jq -r .[].browser_download_url | grep -i ${MATCH})\r\nelse\r\n    VERSION_CHECK=$(echo ${RELEASES} | jq -r --arg VERSION \"v${VERSION}\" '.[] | select(.tag_name==$VERSION) | .tag_name')\r\n    if [ \"v${VERSION}\" == \"${VERSION_CHECK}\" ]; then\r\n        DOWNLOAD_URL=$(echo ${RELEASES} | jq -r --arg VERSION \"v${VERSION}\" '.[] | select(.tag_name==$VERSION) | .assets[].browser_download_url' | grep -i ${MATCH})\r\n    else\r\n        echo -e \"defaulting to latest release\"\r\n        DOWNLOAD_URL=$(echo ${LATEST_JSON} | jq .assets | jq -r .[].browser_download_url)\r\n    fi\r\nfi\r\n\r\n# Download and extract the Code-Server version\r\necho \"Downloading $DOWNLOAD_URL\"\r\ncurl -fL $DOWNLOAD_URL | tar -C /mnt/server/.local/lib -xz\r\nmv /mnt/server/.local/lib/code-server-*linux-${ARCH} /mnt/server/.local/lib/code-server-${VERSION}\r\n\r\n# Install extensions if any\r\nif [ -n \"${EXTENSIONS}\" ]; then\r\n    IFS=',' read -ra EXT_ARRAY <<< \"${EXTENSIONS}\"\r\n    for EXT in \"${EXT_ARRAY[@]}\"; do\r\n        /mnt/server/.local/lib/code-server-${VERSION}/bin/code-server --install-extension $EXT\r\n    done\r\nfi\r\n\r\n# Set workspace folder\r\nif [ -n \"${WORKSPACE}\" ]; then\r\n    mkdir -p \"${WORKSPACE}\"\r\n    echo \"Workspace set to ${WORKSPACE}\"\r\nfi\r\n\r\n# Set up configuration\r\nPATH=\"/mnt/server/.local/bin:$PATH\"\r\necho \"password: ${PASSWORD}\" > /mnt/server/.config/code-server/config.yaml\r\necho \"bind-addr: 0.0.0.0\" >> /mnt/server/.config/code-server/config.yaml\r\necho \"auth: password\" >> /mnt/server/.config/code-server/config.yaml\r\necho \"cert: false\" >> /mnt/server/.config/code-server/config.yaml\r\n\r\n# Set memory limit if provided\r\nif [ -n \"${MEMORY_LIMIT}\" ]; then\r\n    echo \"Memory limit set to ${MEMORY_LIMIT}\"\r\n    # Assuming Docker is used, modify the limit\r\n    docker run -m ${MEMORY_LIMIT} ...\r\nfi\r\n\r\n# Set up auto-update with a cron job\r\necho \"Setting up auto-update cron job\"\r\necho \"0 0 * * * curl -fL https://api.github.com/repos/coder/code-server/releases/latest | jq .assets | jq -r .[].browser_download_url | xargs -I {} curl -fL {} | tar -C /mnt/server/.local/lib -xz\" | crontab -\r\n\r\n# Install complete\r\necho \"Install complete\"",
            "container": "ghcr.io/parkervcp/installers:debian",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "name": "Password",
            "description": "Password to login to your Code-Server instance",
            "env_variable": "PASSWORD",
            "default_value": "changeme",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:32",
            "field_type": "text"
        },
        {
            "name": "Version",
            "description": "Version for (re)installation such as 3.9.3. Defaults to latest version if no valid version is provided",
            "env_variable": "VERSION",
            "default_value": "latest",
            "user_viewable": true,
            "user_editable": true,
            "rules": "string|max:20",
            "field_type": "text"
        },
        {
            "name": "Extensions",
            "description": "Comma-separated list of extensions to install (e.g., ms-python.python, ms-vscode.cpptools)",
            "env_variable": "EXTENSIONS",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "string",
            "field_type": "text"
        },
        {
            "name": "Workspace",
            "description": "Default workspace or folder for users",
            "env_variable": "WORKSPACE",
            "default_value": "/mnt/server/projects",
            "user_viewable": true,
            "user_editable": true,
            "rules": "string",
            "field_type": "text"
        },
        {
            "name": "Memory Limit",
            "description": "Memory limit for the Code-Server container (e.g., 2g)",
            "env_variable": "MEMORY_LIMIT",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "string",
            "field_type": "text"
        }
    ]
}
